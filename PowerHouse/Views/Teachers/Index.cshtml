@model IEnumerable<PowerHouse.Models.Teacher>

@{
    ViewData["Title"] = "Index";
    var teachers = Model.ToArray();
}
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        * {
            box-sizing: border-box;
        }

        /* Create two equal columns that floats next to each other */
        .column {
            float: left;
            width: 50%;
            padding: 10px;
        }

        /* Clear floats after the columns */
        .row:after {
            content: "";
            display: table;
            clear: both;
        }
        /* Style the buttons */
        .btn {
            border: none;
            outline: none;
            padding: 12px 16px;
            background-color: #f1f1f1;
            cursor: pointer;
        }

            .btn:hover {
                background-color: #ddd;
            }

            .btn.active {
                background-color: #666;
                color: white;
            }
    </style>
</head>
<body>

    <h2>This is our dedicated and unique team of awesome instructors</h2>

    <p>Click on a button to choose list view or grid view.</p>

    <button class="btn btn-primary">@Html.ActionLink("Add New Member", "Create", "Teachers")</button>
    <div class="row">
        <div id="btnContainer" style="" class="pull-right">
            <button class="btn" onclick="listView()"><i class="fa fa-bars"></i> List</button>
            <button class="btn active" onclick="gridView()"><i class="fa fa-th-large"></i> Grid</button>
        </div>
    </div>

    <hr />
    @for (int a = 0; a < Model.Count(); a++)
    {
        if (a % 2 != 0)
        {
    <div class="column" style="background-color:#f5f5f5;">
        <h2>@teachers[a].FirstName @teachers[a].LastName</h2>
         <p>Age: @teachers[a].Age   Gender: @teachers[a].Gender</p>
        <a asp-action="Edit" asp-route-id="@teachers[a].Id">Edit</a> |
        <a asp-action="Details" asp-route-id="@teachers[a].Id">Details</a> |
        <a asp-action="Delete" asp-route-id="@teachers[a].Id">Delete</a>
    </div>
        }
        else
        {
    <div class="column" style="background-color:#cdcdcd;">
        <h2>@teachers[a].FirstName @teachers[a].LastName</h2>
        <p>Age: @teachers[a].Age   Gender: @teachers[a].Gender</p>
        <a asp-action="Edit" asp-route-id="@teachers[a].Id">Edit</a> |
        <a asp-action="Details" asp-route-id="@teachers[a].Id">Details</a> |
        <a asp-action="Delete" asp-route-id="@teachers[a].Id">Delete</a>
    </div>
        }
    
    }

    <script>
        // Get the elements with class="column"
        var elements = document.getElementsByClassName("column");

        // Declare a loop variable
        var i;

        // List View
        function listView() {
            for (i = 0; i < elements.length; i++) {
                elements[i].style.width = "100%";
            }
        }

        // Grid View
        function gridView() {
            for (i = 0; i < elements.length; i++) {
                elements[i].style.width = "50%";
            }
        }

        /* Optional: Add active class to the current button (highlight it) */
        var container = document.getElementById("btnContainer");
        var btns = container.getElementsByClassName("btn");
        for (i = 0; i < btns.length; i++) {
            btns[i].addEventListener("click", function () {
                var current = document.getElementsByClassName("active");
                current[0].className = current[0].className.replace(" active", "");
                this.className += " active";
            });
        }
    </script>

</body>
</html>

@*<p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gender)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@
